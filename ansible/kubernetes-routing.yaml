- hosts: worker

  tasks:

  - name: Gather Kubernetes nodes facts (on localhost)
    local_action: command kubectl get nodes --output=json
    register: result
  - set_fact:
      kubernetes_nodes: "{{ result.stdout | from_json }}"

  - debug: msg="Extract Kubernetes node addresses"
    with_flattened:
      - "{{ kubernetes_nodes['items']|map(attribute='status')|map(attribute='addresses')|list }}"
    register: node_addresses_tmp
    no_log: True
  - set_fact:
     kubernetes_nodes_addresses: "{{ node_addresses_tmp.results|map(attribute='item')|selectattr('type','equalto','InternalIP')|map(attribute='address')|list }}"

  - set_fact:
      kubernetes_pod_cidrs: "{{ kubernetes_nodes['items']|map(attribute='spec')|map(attribute='podCIDR')|list }}"


  - name: Add pod routes
    command: "route add -net {{ item.0|ipaddr('network') }} netmask {{ item.0|ipaddr('netmask') }} gw {{ item.1|ipaddr('address') }} metric 1"
    with_together:
      - "{{ kubernetes_pod_cidrs }}"
      - "{{ kubernetes_nodes_addresses }}"
    ignore_errors: true # The route command fails if the route already exists
    become: true

  - name: Verify routes
    command: "route -n"
    become: true
    register: result

  - assert:
      that:
        - "'{{ kubernetes_pod_cidrs[0]|ipaddr('network') }}' in result.stdout"
        - "'{{ kubernetes_nodes_addresses[0] }}' in result.stdout"

  - name: Add iptable rule to masquerade traffic bound outside VPC CIDR
    command: "iptables -t nat -A POSTROUTING ! -d {{ internal_cidr }} -o eth0 -j MASQUERADE"
    become: true
